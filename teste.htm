<!DOCTYPE html>
<html>
<head>
  <title>Piano com seleção de teclado MIDI</title>
</head>
<body>
  <h1>Escolha um teclado MIDI:</h1>
  <select id="midi-inputs">
    <option disabled selected>Selecione um teclado MIDI</option>
  </select>

  <script src="https://unpkg.com/webmidi@2.5.0/webmidi.min.js"></script>
  <script src="https://unpkg.com/tone/build/Tone.js"></script>
  <script>
    var input; // Variável para armazenar o teclado MIDI selecionado
    var audioContext; // Objeto para o contexto de áudio
    var currentOscillator; // Oscilador atual

    // Função para exibir os teclados MIDI disponíveis
    function showMIDIInputs() {
      var midiInputs = WebMidi.inputs;
      var selectElement = document.getElementById('midi-inputs');

      midiInputs.forEach(function(input) {
        var optionElement = document.createElement('option');
        optionElement.value = input.name;
        optionElement.text = input.name;
        selectElement.appendChild(optionElement);
      });
    }

    // Função para configurar o teclado MIDI selecionado
    function setupMIDIInput() {
      var selectElement = document.getElementById('midi-inputs');
      var selectedInputName = selectElement.value;

      if (selectedInputName) {
        input = WebMidi.getInputByName(selectedInputName);

        if (input) {
          console.log('Teclado MIDI selecionado:', selectedInputName);
          input.addListener('noteon', 'all', playNote);
          input.addListener('noteoff', 'all', releaseNote);
        }
      }
    }

    // Função para reproduzir a nota no sintetizador
    function playNote(event) {
      var note = event.note.number;

      // Converter o número da nota MIDI para a frequência correspondente
      var frequency = 440 * Math.pow(2, (note - 69) / 12);

      // Liberar o oscilador anterior, se houver
      releaseNote();

      // Criar um novo oscilador
      currentOscillator = audioContext.createOscillator();
      currentOscillator.type = 'triangle';
      currentOscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);
      currentOscillator.connect(audioContext.destination);
      currentOscillator.start();
      console.log('Nota MIDI recebida:', note);
    }

    // Função para liberar a nota no sintetizador
    function releaseNote() {
      if (currentOscillator) {
        currentOscillator.stop();
        currentOscillator.disconnect();
        currentOscillator = null;
      }
    }

    // Evento quando a escolha do teclado MIDI é alterada
    document.getElementById('midi-inputs').addEventListener('change', setupMIDIInput);

    // Inicializa o WebMIDI.js e exibe os teclados MIDI disponíveis
    WebMidi.enable(function(err) {
      if (err) {
        console.log('Erro ao inicializar o WebMIDI:', err);
      } else {
        console.log('WebMIDI inicializado com sucesso!');
        showMIDIInputs();

        // Inicializa o contexto de áudio
        audioContext = new (window.AudioContext || window.webkitAudioContext)();
      }
    });
  </script>
</body>
</html>
